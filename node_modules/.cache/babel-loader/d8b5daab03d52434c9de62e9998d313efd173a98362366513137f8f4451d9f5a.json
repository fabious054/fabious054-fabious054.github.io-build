{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\personalProjects\\\\webresume\\\\src\\\\contexts.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\n\n// Defina o tipo do contexto\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Crie o contexto\nconst LanguageContext = /*#__PURE__*/createContext(undefined);\n\n// Hook customizado para usar o contexto\nexport const useLanguage = () => {\n  _s();\n  const context = useContext(LanguageContext);\n  if (!context) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n};\n\n// Crie o provedor de contexto\n_s(useLanguage, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const LanguageProvider = ({\n  children\n}) => {\n  _s2();\n  const [language, setLanguage] = useState('en');\n  return /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n    value: {\n      language,\n      setLanguage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s2(LanguageProvider, \"fVUtOCD1O58HgvMjnE8lxRQa0QA=\");\n_c = LanguageProvider;\nvar _c;\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","LanguageContext","undefined","useLanguage","_s","context","Error","LanguageProvider","children","_s2","language","setLanguage","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/personalProjects/webresume/src/contexts.tsx"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\n\r\n// Defina o tipo do contexto\r\ntype LanguageContextType = {\r\n  language: string;\r\n  setLanguage: React.Dispatch<React.SetStateAction<string>>;\r\n};\r\n\r\n// Crie o contexto\r\nconst LanguageContext = createContext<LanguageContextType | undefined>(\r\n  undefined\r\n);\r\n\r\n// Hook customizado para usar o contexto\r\nexport const useLanguage = () => {\r\n  const context = useContext(LanguageContext);\r\n  if (!context) {\r\n    throw new Error('useLanguage must be used within a LanguageProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n// Crie o provedor de contexto\r\nexport const LanguageProvider: React.FC = ({ children }:{children:React.FunctionComponent}) => {\r\n  const [language, setLanguage] = useState('en');\r\n\r\n  return (\r\n    <LanguageContext.Provider value={{ language, setLanguage }}>\r\n      {children}\r\n    </LanguageContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMA;AACA,MAAMC,eAAe,gBAAGL,aAAa,CACnCM,SACF,CAAC;;AAED;AACA,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAMC,OAAO,GAAGP,UAAU,CAACG,eAAe,CAAC;EAC3C,IAAI,CAACI,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,oDAAoD,CAAC;EACvE;EACA,OAAOD,OAAO;AAChB,CAAC;;AAED;AAAAD,EAAA,CARaD,WAAW;AASxB,OAAO,MAAMI,gBAA0B,GAAGA,CAAC;EAAEC;AAA4C,CAAC,KAAK;EAAAC,GAAA;EAC7F,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE9C,oBACEG,OAAA,CAACC,eAAe,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAEH,QAAQ;MAAEC;IAAY,CAAE;IAAAH,QAAA,EACxDA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACR,GAAA,CARWF,gBAA0B;AAAAW,EAAA,GAA1BX,gBAA0B;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}